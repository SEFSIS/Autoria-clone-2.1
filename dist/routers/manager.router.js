"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.managerRouter = void 0;
const express_1 = require("express");
const manager_controller_1 = require("../controllers/manager.controller");
const auth_admin_middleware_1 = require("../middlewares/auth-admin.middleware");
const auth_manager_middleware_1 = require("../middlewares/auth-manager.middleware");
const common_middleware_1 = require("../middlewares/common.middleware");
const manager_middleware_1 = require("../middlewares/manager.middleware");
const manager_validator_1 = require("../validators/manager.validator");
const router = (0, express_1.Router)();
router.get("/", auth_admin_middleware_1.authAdminMiddleware.checkAccessToken, manager_controller_1.managerController.getAll);
router.get("/me", auth_manager_middleware_1.authManagerMiddleware.checkAccessToken, manager_controller_1.managerController.getMe);
router.get("/:managerId", auth_admin_middleware_1.authAdminMiddleware.checkAccessToken, common_middleware_1.commonMiddleware.isIdValid("managerId"), manager_middleware_1.managerMiddleware.getByIdOrThrow, manager_controller_1.managerController.getById);
router.put("/:managerId", auth_admin_middleware_1.authAdminMiddleware.checkAccessToken, auth_manager_middleware_1.authManagerMiddleware.checkAccessToken, common_middleware_1.commonMiddleware.isIdValid("managerId"), common_middleware_1.commonMiddleware.isBodyValid(manager_validator_1.ManagerValidator.update), manager_controller_1.managerController.updateManager);
router.delete("/:managerId", auth_admin_middleware_1.authAdminMiddleware.checkAccessToken, common_middleware_1.commonMiddleware.isIdValid("managerId"), manager_controller_1.managerController.deleteManager);
exports.managerRouter = router;
